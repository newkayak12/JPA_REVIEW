리스너(audit??)
    : 모든 엔티티를 대상으로 언제 어떤 사용자가 삭제를 요청했는지 모드 로그로 남겨야하는 요구사항이 있다고 할때
    애플리케이션 삭제로직을 다 찾아서 로그를 남기는 것은 비효율적이다.


                                                  [    Detached    ]
                                                         ⍋ |
                                                         | |
                                                detach() | |
                                                clear()  | | merge()
                                                close()  | |
                                                         | |
                                                         | |
                persist() --> 2.PrePersist               | ⍒          1.PostLoad <-------- find()[JPQL]     [‾‾‾‾‾‾‾‾]  5. PostPersist
[    New     ] ------------------------------> [      Managed      ] <---------------------------------     [   DB   ]  6. PostUpdate
                                                                      --------------------------------->    [⎽⎽⎽⎽⎽⎽⎽⎽]  7. PostRemove
                                                         | ⍋            3.PreUpdate --------> flush()              ⍋
                                                         | |                                                      |
                                                remove() | |                                                      |
                                                 |       | | persist()                                            |
                                                 ⍒       | |                                                      |
                                        4.PreRemove      | |                                                      |
                                                         | |                                                      |
                                                         ⍒ |                                                      |
                                                  [     Remove      ] ⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎦

   1. PostLoad : 엔티티가 영속성 컨텍스트에 조회된 직후 또는 refresh를 호출한 후(2차 캐시에 저장되어 있어도 호출된다.)
   2. PrePersist : persist()메소드를 호출해서 엔티티를 영속성 컨텍스트에 관리하기 직전에 호출된다. 식별자 생성 전략을 사용한 경우, 엔티티에 실별자는 아직 존재하지 않는다. 새로운 인스턴트를 merge()할 떄도 수행된다.
   3. PreUpdate : flush나 commit을 호출해서 엔티티를 데이터베이스에 수정하기 직전에 호출된다.
   4. PreRemove : remove() 메소드를 호출해서 엔티티를 영속성 컨텍스트에서 삭제하기 직전에 호출된다. 또한 삭제 명령어로 영속성 전이가 일어날 때도 호출된다. orphanRemoval에 대해서는 flush나 commit 시에 호출된다.
   5. PostPersist : flush나 commit을 호출해서 엔티티를 데이터베이스에 저장한 직후에 호출된다. 실별자가 항상 존재한다. 참고로  식별자 생성 전략이 INDENTITY면 식별자를 생성하기 위해 persist()를 호출하면서 데이터
                 베이스에 해당 엔티티를 저장하므로 이때는 persist()를 호출한 직후에 PostPersist가 호출된다.
   6. PostUpdate : flush나 commit을 호출해서 엔티티르 데이터베이스에 수정한 직후에 호출된다.
   7. PostRemove : flush나 commit을 호출해서 엔티티를 데이터베이스에 삭제한 직후에 호출된다.



    이벤트 적용 위치 : 이벤트는 엔티티에서 직접 받거나 별도의 리스너를 등록해서 받을 수 있다.
        1. 엔티티에 직접 적용
        2. 별도의 리스너 등록
        3. 기본 리스너 사용


...혹은 스프링 AUDIT 한 번 봐야곘다.

