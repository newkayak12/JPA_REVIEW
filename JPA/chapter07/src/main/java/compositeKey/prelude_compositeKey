복합 키와 식별 관계

식별(Identifying Relationship) vs 비식별(Non-Identifying Relationship)

DB 테이블 사이의 관계는 외래키가 기본 키에 포함되어있는지에 따라서 식별/ 비식별로 나뉜다.

식별
------Parent------              --------CHILD--------
|  PARENT_ID(PK) | -||-------<  |  PARENT_ID(PK,FK) |
|   NAME         |              |  CHILD_ID(PK)     |
------------------              |   NAME            |
                                ---------------------

식별 관계는 parent테이블의 기본 키를 받아서 child의 기본 키로 사용한다.


비식별
------Parent------              --------CHILD--------
|  PARENT_ID(PK) | -||-------<  |  CHILD_ID(PK)     |
|   NAME         |              |  PARENT_ID(FK)    |
------------------              |        NAME       |
                                ---------------------

비실별 관계는 parent 테이블의 기본 키를 받아서 child 테이블의 외래키만으로 사용한다.

비식별 관계는 외래키에 null을 허용하는지에 따라서 필수적 비식별 관계와 선택적 비식별 관계로 나뉜다.
    - 필수적 비식별 관계(Mandatory) : 외래 키에 NULL을 허용하지 않는다. 연관관계를 필수적으로 맺어야만 한다.
    - 선택적 비식별 관계(Optional)  : 외래 키에 NULL을 허용한다. 연관관계를 맺을지 말지를 선택할 수 있다.




    >>>>>>>>>>>>>>>>>>>>> IdClass VS EmbeddedId
    취향에 맞는 것을 쓰면 되지만, JPQL에서 IdClass보다 EmbeddedId가 조금 더 길어진다.
    IdClass : em.createQuery("select p.id1, p.id2 from Parent p");
    EmbeddedId : em.createQuery("select p.id.id1, p.id.id2 from Parent p");
    <<<<<<<<<<<<<<<<<<<<<<<<<<<

    ++ 복합키에서는 @GenerateValue를 사용할 수 없다. 복합키를 구성하는 여러 컬럼 중 하나에도 사용할 수 없다.

