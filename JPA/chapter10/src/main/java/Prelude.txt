객체 지향 쿼리
> JPQL
> Criteria
> QueryDSL
> Native SQL
> 객체지향 쿼리 심화

JPA는 복잡한 검색 조건을 사용해서 엔티티 객체를 조회할 수 있는 다양한 쿼리 기술을 지원한다.
Criteria나 QueryDSL은 JPQL을 쓰기 쉽도록 해도록 해주는 기술이다.

>> 객체 지향 쿼리란?
    기존에 있는 메소드를 이용하면 식별자로 엔티티를 조회할 수 있다. 추가적으로 조회한 엔티티에 객체 그래프 탐색을 이용하면 연관된 엔티티 역시 찾을 수 있다.
        > 1. 식별자로 조회
        > 2. 객체 그래프 탐색

    그러나 이러한 기능만으로 애플리케이션 개발은 어렵다. JPA는 DB가 아닌 엔티티를 대상으로 개발하므로 검색도 테이블이 아닌 엔티티 객체를 대상으로 하는 방법이 필요하다.
    >> 테이블이 아닌 객체를 대상으로 검색하는 객체지향 쿼리다.
    >> SQL을 추상화해서 특정 데이터베이스 SQL에 의존하지 않는다.

    JPQL은 엔티티 객체를 대상으로 하는 객체지향 쿼리이다. JPQL을 사용하면 JPA는 이 JPQL을 분석하여 적절한 SQL을 만들어 DB를 조회한다. 그리고 그 결과로 엔티티를 구성하여 반환한다.

    JPQL(Java Persistence Query Language)
    Criteria Query : JPQL을 편하게 작성하도록 도와주는 API, 빌더 클래스 모음
    Natvie Query : : JPA에서 JPQL대신 직접 SQL을 사용할 수 있다.
    Query DSL : Criteria Query처럼 JPQL을 편하게 작성하도록 도와주는 빌더 클래스 모음, 비표준 오픈 소스 프레임워크
    JDBC 직접 사용 // Mybatis와 같은 SQL 매퍼 프레임 워크 사용


    1. JPQL은 엔티티 객체르 조회하는 객체지향 쿼리이다. 문법은 SQL과 비슷하고 ANSI 표준 SQL이 제공하는 기능을 유사하게 지원한다. JPQL은 SQL을 추상화 해서 특정 DB에 의존하지 않는다.
    단순의  DB에 맞춰서 Dialect만 수정하면 JPQL을 수정하지 않아도 대응이 가능하다. 추가적으로  JPQL은 SQL보다 단순하고 간결하다.
