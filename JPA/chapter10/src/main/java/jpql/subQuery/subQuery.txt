JPQL도 SQL처럼 서브쿼리를 지원한다. 제약사항이 있는데 WHERE, HAVING 절에서만 사용할 수 있고, SELECT, FROM절에서는 사용이 불가능하다.

SELECT m FROM Member m
WHERE m.age > (SELECT avg(m2.age) from Member m2);

            or

SELECT m FROM Member m
WHERE (SELECT COUNT(o) FROM Order o WHERE m = o.member) > 0; ___ 이는 ___ WHERE (SELECT m.orders.size>0)으로 바꿀 수도 있다.



서브쿼리 함수
1. [NOT] EXISTS (subquery)
2. {ALL | ANY | SOME} (subquery)
3. [NOT] IN (subquery)

1. EXISTS : 서브쿼리에 결과가 존재하면 참이다. [NOT은 반대]
    > SELECT m FROM Member m
     WHERE EXISTS (SELECT t FROM m.team t where t.name = '팀A');

2. {ALL | ANY | SOME} : 비교 연산자와 같이 사용한다. ( = || > || >= || <= || < || <> )
    > ALL : 조건을 모두 만족하면 참이다.
    > ANY 혹은 SOME : 둘은 같은 의미이다. 조건을 하나라도 만족하면 참이다.

    > SELECT o FROM Order o
    WHERE o.orderAmount > ALL (SELECT p.stockAMount FROM Product p);

    > SELECT m FROM Member m
    WHERE m.team = ANY (SELECT t FROM Team t);

3. IN : 서브쿼리의 결과 중 하나라도 같은 것이 있으면 참이다.
    > SELECT t FROM team t
    WHERE t IN (SELECT t2 FROM Team t2 JOIN t2.members m2 WHERE m2.age >= 20);
