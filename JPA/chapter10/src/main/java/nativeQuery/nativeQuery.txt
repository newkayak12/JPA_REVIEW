1. JPQL은 SQL이 지원하는 대부분의 문법과 SQL 함수들을 지원하지만 특정 데잍터베이스 종속적인 기능은 지원하지 않는다.

    1. 특정 데이터베이스만 지원하는 함수, 문법, SQL쿼리 힌트
    2. 인라인뷰(from 절의 서브쿼리), union, intersect
    3. 스토어드 프로시저

 만약 종속적인 함수, 등을 사용한다면??
     = JPQL에서 네이티브 SQL 함수를 호출할 수 있다.
     = 하이버네이트는 데이터베이스 방언에 각 테이터베이스 종속적인 함수들을 정의해놓았다.

 특정 DB만 지원하는 SQL 힌트
    = 하이버네이트를 포함한 몇몇 JPA 구현체들이 지원

 인라인뷰(from 절에서 사용하는 서브쿼리), union, intersect
    = 하이버네이트는 지원하지 않지만 일부 JPA 구현체들이 지원

 스토어 프로시저
    = JPQL에서 스토어드 프로시저를 호출할 수 있다.

 특정 DB에서만 지원하는 문법
    = 오라클의 Connect by 처럼 특정 DB에 종속적인 문법은 지원하지 않는다. 이때는 네이티브 SQL을 사용해야한다.



    >>>>>>>>>>>>>
    JPQL을 사용할 수 없을 때 JPA는 SQL을 직접 사용할수 있도록하는데 이를 네이티브 SQL이라고 한다. : JPQL => 자동 모드 / NativeQuery => 수동모드
    네이티브는 엔티티를 조회할 수 있고, JPA가 지원하는 영속성 컨텍스트의 기능을 그대로 사용할 수 있다.

2. nativeQuery

  //결과 타입 정의
     public Query createNativeQuery(String sqlString, Class resultClass)
  //결과 타입을 정의할 수 없을 때
     public Query createNativeQuery(String sqlString)

     public Query createNativeQuery (String sqlString, String resultSetMapping) //결과 매핑 사용

     네이티브 SQL은 JPQL이 자동 생성하는 SQL을 수동으로 직접 정의하는 것이다. 따라서 JPA가 제공하는 기능 대부분을 그대로 사용할 수 있다.
